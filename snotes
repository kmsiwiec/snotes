#!/bin/sh
# snotes-0.9 by v4hn / 2009-2013
# See LICENSE file for copyright and license details.

info(){
    echo "$0: Info: $1" >&2
}

die(){
    echo "$0: Error: $1" >&2
    exit 1
}

while [ -n "$1" ]; do
    case "$1" in
    "-s"|"--search")
        SNOTES_SEARCH="yes"
        shift;;
    *)
        echo "usage: $0 [-s|--search]"
        die "unknown parameter '$1'"
        ;;
    esac
done

if [ ! -d "$HOME/.snotes" ]; then
    info "creating config folder ~/.snotes"
    mkdir $HOME/.snotes || die "Could not create $HOME/.snotes"
    cat > $HOME/.snotes/config <<EOF
SNOTES_EDITOR="gvim -f"
SNOTES_DB="$HOME/.snotes/notes"

# clean trailing whitespace from file automatically
SNOTES_CLEANUP="yes"

# how many commits should be shown for "changed:note"
SNOTES_CHANGED_COMMITS=2
EOF
fi

source "$HOME/.snotes/config" ||
    die "config ~/.snotes/config messed up"

[ -n "`which dmenu 2>/dev/null`" ] ||
    die "dmenu not in PATH"

[ -n "`which git 2>/dev/null`" ] ||
    die "git not in PATH"

if [ ! -d "$SNOTES_DB" ]; then
    info "creating notes database '$SNOTES_DB'"
    git init -q "$SNOTES_DB" || die "cannot create '$SNOTES_DB'"
    cd "${SNOTES_DB}"
    # changed:note assumes a predecessor for each non-empty commit
    git commit --allow-empty -m "root commit"
fi

cd "$SNOTES_DB"

if [ "${SNOTES_SEARCH}" = "yes" ]; then
    regex=`echo | dmenu ${DMENU_ARGS}`
    [ -n "$regex" ] || die "regex empty"
    select="`(grep -il $regex *; find . -path ./.git -prune -o -regex ".*$regex.*" -exec basename \{\} \; ) | sort -u | dmenu`"
else
    select=`ls | dmenu ${DMENU_ARGS}`
fi

if [ -z "$select" ]; then
    exit 0
fi

case "${select##* }" in
blame|b)
    file="blame:${select% *}"
    ;;
changed|c)
    file="changed:${select% *}"
    ;;
*)
    file="note:${select}"
esac

exec snotes-open "$file"
